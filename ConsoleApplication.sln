#include <iostream>
#include <vector>
#include <map>
#include <string>
#include <locale.h> 
using namespace std;


class TuringMachine {
private:

    vector<char> lenta;

    int poziciya;

    string sostoyanie;

    map<pair<string, char>, pair<string, char>> pravila;
public:
 
    TuringMachine() {
      
        poziciya = 0;
        sostoyanie = "start";
    }
  
    void setLenta(string input) {
     
        lenta.clear();

        
        for (char simvol : input) {
            lenta.push_back(simvol);
        }

   
        lenta.insert(lenta.begin(), '_');
        lenta.push_back('_');

       
        poziciya = 1;
    }
    
    void addPravilo(string tek_sostoyanie, char tek_simvol,
        string nov_sostoyanie, char nov_simvol) {
        pravila[{tek_sostoyanie, tek_simvol}] = { nov_sostoyanie, nov_simvol };
    }
    
    bool step() {
        
        char tek_simvol = lenta[poziciya];

       
        auto pravilo = pravila.find({ sostoyanie, tek_simvol });

        
        if (pravilo == pravila.end()) {
            return false;
        }

        
        sostoyanie = pravilo->second.first;
        lenta[poziciya] = pravilo->second.second;

        
        poziciya += (sostoyanie == "right") ? 1 : -1;

        return true;
    }
   
    void showLenta() {
        for (int i = 0; i < lenta.size(); i++) {
            if (i == poziciya) {
                cout << "[" << lenta[i] << "]";
            }
            else {
                cout << " " << lenta[i] << " ";
            }
        }
        cout << endl;
    }
   
    void run() {
        int shagi = 0;

        
        while (step()) {
            shagi++;

            
            if (shagi <= 10) {
                cout << "Шаг " << shagi << ": ";
                showLenta();
            }
        }

        cout << "Машина остановилась после " << shagi << " шагов" << endl;
    }
};


void primerMashiny(TuringMachine& mt) {
    
    mt.addPravilo("start", '1', "right", '0');
    mt.addPravilo("right", '1', "right", '1');
    mt.addPravilo("right", '_', "stop", '_');
}

int main() {
  
    setlocale(LC_ALL, "Russian");

    TuringMachine mt;

    primerMashiny(mt);


    string vhodnaya_stroka;
    cout << "Введите строку для обработки (например, '111'): ";
    cin >> vhodnaya_stroka;

    mt.setLenta(vhodnaya_stroka);

    cout << "Начальная лента: " << vhodnaya_stroka << endl;
    mt.run();

    return 0;
}
